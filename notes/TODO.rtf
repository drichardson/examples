{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf270
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid0\'02\'05.;}{\levelnumbers\'01;}}{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid0\'02\'05.;}{\levelnumbers\'01;}}{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww13940\viewh11560\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\b\fs36 \cf0 Multi-media Note Taking Application
\b0\fs24 \
- Supports many media formats: quick time movies, photos, audio, PDF, RTF, SVG  for drawing, web links (make an image of the web site - perhaps use web kit or Safari to print the page to a pdf and then import it), iWork formats if possible (Pages, Keynote, and Numbers), and a simple embedded file when native rendering is not possible.\
- Timeline showing when you added what.\
- Page meta data: tags, notebook it belongs to, owner\
- Infinite canvas. Doesn't feel painful to add regions - it should be seamless. When dragging a file, the scroll bars automatically grow.\
- Perhaps you can use Quick Look to display app content, and then launch an editor if needed.\
- Spotlight plug-in for finding files easiser\
\

\b Thinking about features
\b0 \
- Be able to revert to any point in the timeline\
- Be able to automatically create notes based on what you are doing.\
- Plug-in architecture for digital pens. Work with Pen manufactures to bundle software or provide demo version of software.\
- Viewer for iPhone\
- Basic writer for iPhone\
- Encrypted files\
\
\

\b\fs34 Proof of Concept Demos
\b0\fs24 \
Proof of Concept Demos mitigate risk and improve design by doing early investigation of core technologies. Since the technologies are understood before much of the main app has been designed, the app is designed with all technologies in mind. This makes for a more natural fit and better expectations of what each tech can do during the design phase.\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\ql\qnatural\pardirnatural
\ls1\ilvl0\cf0 {\listtext	1.	}Core Data Demo\
{\listtext	2.	}Core Animation Demo\
{\listtext	3.	}Free form text\
{\listtext	4.	}Canvas with infinite bounds\
{\listtext	5.	}Free form scribbling of vectors\
{\listtext	6.	}Photo capture\
{\listtext	7.	}Audio capture\
{\listtext	8.	}Video capture\
{\listtext	9.	}PDF rendering\
{\listtext	10.	}Uniform Type Identifiers\
{\listtext	11.	}Quick Look plug-in\
{\listtext	12.	}Spotlight Plug-in\
{\listtext	13.	}Accessibility\
{\listtext	14.	}Latent Semantic Mapping\
{\listtext	15.	}\strike \strikec0 Speech Recognition\strike0\striked0 \
{\listtext	16.	}\strike \strikec0 Text to Speech\strike0\striked0 \
{\listtext	17.	}Bindings Demo\
{\listtext	18.	}Cocoa Document architecture\
{\listtext	19.	}\strike \strikec0 Internationalization\strike0\striked0 \
{\listtext	20.	}\strike \strikec0 Objective-C 2.0\strike0\striked0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 \

\b\fs34 Plan of Attack
\b0\fs24 \
- Find out about Core Data\
- Canvas with free form text\
- Canvas navigator to move around a canvas\
- " to move between multiple canvases (grouped by something - section, folder, whatever)\
- Canvas with with free form video capture\
- " with free form photo capture\
- " with free form audio capture\
- " with free form drawing\
- " with PDF rendering\
\
\

\b\fs34 Canvas View Ideas
\b0\fs24 \
For each data item in your core data model, you can have a view that knows how to display it. When you get the document loaded event, you need to create a view for each item in the model and setup bindings programatically.\
\

\b\fs34 Leopard Features to Use\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\ql\qnatural\pardirnatural
\ls2\ilvl0
\b0\fs24 \cf0 {\listtext	\uc0\u8259 	}Flat installs (xar) (if installer is needed)\
{\listtext	\uc0\u8259 	}Uniform Type Identifiers to identify files (helps Spotlight and some other crap)\
{\listtext	\uc0\u8259 	}Resolution Independence (test with Quartz Debug)\
{\listtext	\uc0\u8259 	}Make all views animation friendly and use Core Animation to make stuff sweetly polished\
{\listtext	\uc0\u8259 	}Accessibility for government and education markets\
{\listtext	\uc0\u8259 	}Latent Semantic Mapping to categorize data\
{\listtext	\uc0\u8259 	}Speech recognition - for accessibility and innovative productivity features\
}